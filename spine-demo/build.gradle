import groovy.io.FileType

apply plugin: "java"
apply plugin: 'application'
apply plugin: "jtransc"

mainClassName = "com.esotericsoftware.spine.SimpleTest1"
//mainClassName = "com.esotericsoftware.spine.NormalMapTest"
//mainClassName = "NormalMapTestIgnoreArgs"

sourceSets.main {
	java {
		srcDirs = [
			'spine-runtimes/spine-libgdx/spine-libgdx/src',
			'spine-runtimes/spine-libgdx/spine-libgdx-tests/src',
			'src',
		]
	}
	resources {
		srcDir 'spine-runtimes/spine-libgdx/spine-libgdx-tests/assets'
	}
}

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath "com.jtransc:jtransc-gradle-plugin:$jtranscVersion"
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	jtransc "com.jtransc.gdx:gdx-backend-jtransc:$jtranscVersion" // just included when compiling using jtransc and before other dependencies

	compile "com.jtransc:jtransc-rt-core:$jtranscVersion"
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$libgdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$libgdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-box2d:$libgdxVersion"

	testCompile group: 'junit', name: 'junit', version: '4.+'
}

def extraVersion = version
jtransc {
	title = "SpineDemo"
	name = "SpineDemo"
	company = "jtransc"
	package_ = "com.jtransc.gdx.examples"
	initialWidth = 640
	initialHeight = 480
	fullscreen = false
    resizable = true
	borderless = false
	orientation = "landscape"
	param("allowHighDpi", "true")
	vsync = false // WARNING: if this true, then fps value will be ignored
	embedResources = false
	assets = [
		"spine-runtimes/spine-libgdx/spine-libgdx-tests/assets"
	]
	relooper = true
	analyzer = true
	treeshaking = true
	minimizeNames = true

	param("version", extraVersion)

    // icon
    icon = file("icons/icon.png").path
    appendVar("androidIcons", file("icons/android.png").path)
	appendVar("iosIcons", file("icons/ios.png").path)

	param("useLimeFileHandle", "true")

	param("fps", "1000")
	param("showFPS", "true")

	param("showDisplayInfo", "true")
	param("showMemInfo", "true")

	param("debugLimeFiles", "false")
	param("debugLimeInput", "false")
	param("debugAudio", "false")

	// Windows
	param("windows_arch", "X86") // allowed X86 or X64

    // iOS
//	param("certificate_team_id", "SK12FH34")
    param("prerenderedIcon", "true")
    param("deploymentVersion", "9.0") // < iOS 9 have 60 MB limit for app (plus problem on since iOS 10.3.2)
	param("non_exempt_encryption", "true")
	param("ios_device", "universal") // ipad iphone
	file("splash-screens").eachFile (FileType.FILES) { file ->
		appendVar("splashScreens", file.path)
	}

	// Android
	param("androidTargetSdkVersion", "26")
	param("androidInstallLocation", "preferExternal")
	appendVar("androidPermissions", "com.android.vending.BILLING")

	customTarget("cpp", "haxe:cpp", "exe")
	customTarget("windows", "haxe:windows", "exe")
	customTarget("linux", "haxe:linux", "bin")
	customTarget("mac", "haxe:mac", "app")
	customTarget("android", "haxe:android", "apk")
	customTarget("ios", "haxe:ios", "ipa")
	customTargetMinimized("html5", "haxe:html5", "js")
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.0.1'
}